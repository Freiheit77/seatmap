// https://observablehq.com/d/a821ebe900c694cc@128
import define1 from "./cc1c4f2583af6f34@140.js";

export default function define(runtime, observer) {
  const main = runtime.module();
  main.variable(observer()).define(["md"], function(md){return(
md`# Jackson Hall_modify WC`
)});
  main.variable(observer("d3")).define("d3", ["require"], function(require){return(
require("d3@5")
)});
  const child1 = runtime.module(define1);
  main.import("MockDatabaseClient", "DatabaseClient", child1);
  main.variable(observer("seats")).define("seats", function(){return(
`,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,4,,,H,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,H,,,4,,,
,,,3,,,G,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,G,,,3,,,
,,,2,,,F,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,F,,,2,,,
,,,1,,,E,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,E,,,1,,,
,,,,,,D,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,D,,,,,,
,,,5,,,C,143,142,141,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,C,,,5,,,
,,,4,,,B,,,140,139,138,137,136,135,134,133,132,131,130,129,128,127,126,125,124,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,,B,,,4,,,
,,,3,,,A,,,142,141,140,139,138,137,136,135,134,133,132,UPPER TIER,,,,,,,,,,,,,,,,,,111,110,109,108,107,106,105,104,103,102,101,,A,,,3,,,
,,,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,,,
,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,,,
,,,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,,,
,,,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,,,
,,,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,,,
,,,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,,,
,,,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,,,
,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,
,,,,,,,,H,6,5,4,3,2,1,H,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,H,1,2,3,4,5,6,,,,,,,,,,,
,,,,G,,9,8,7,6,5,4,3,2,1,G,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,G,1,2,3,4,5,6,7,8,9,,G,,,,,,
,,,,F,,9,8,7,6,5,4,3,2,1,F,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,F,1,2,3,4,5,6,7,8,9,,F,,,,,,
,,,,E,10,9,8,7,6,5,4,3,2,1,E,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,E,1,2,3,4,5,6,7,8,9,10,E,,,,,,
,,,6,D,10,9,8,7,6,5,4,3,2,1,D,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,D,1,2,3,4,5,6,7,8,9,10,D,,,6,,,
,,,5,C,10,9,8,7,6,5,4,3,2,1,C,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,C,1,2,3,4,5,6,7,8,9,10,C,,,5,,,
,,,4,B,10,9,8,7,6,5,4,3,2,1,B,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,B,1,2,3,4,5,6,7,8,9,10,B,,,4,,,
,,,3,A,10,9,8,7,6,5,4,3,2,1,A,,,,,,,,,,,,,,,,,,,,,,,,A,1,2,3,4,5,6,7,8,9,10,A,,,3,,,
,,,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,,,
,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,,,
,,,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3,,,
,,,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,,,
,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6,,,
,,,5,,,,,,,,,,,,,P,123,122,121,120,119,118,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,,,
,,,4,,,,,,,6,5,4,3,2,1,N,123,122,121,120,119,118,117,,,,,,,,,,107,106,105,104,103,102,101,N,1,2,3,4,5,6,,,,,,,4,,,
,,,3,,11,10,9,8,7,6,5,4,3,2,1,M,123,122,121,120,119,118,117,,,,,,,,,,107,106,105,104,103,102,101,M,1,2,3,4,5,6,7,8,9,10,11,,3,,,
,,,2,,11,10,9,8,7,6,5,4,3,2,1,L,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,L,1,2,3,4,5,6,7,8,9,10,11,,2,,,
,,,1,,11,10,9,8,7,6,5,4,3,2,1,K,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,K,1,2,3,4,5,6,7,8,9,10,11,,1,,,
,,,,,11,10,9,8,7,6,5,4,3,2,1,J,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,J,1,2,3,4,5,6,7,8,9,10,11,,,,,
,,,,12,11,10,9,8,7,6,5,4,3,2,1,H,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,H,1,2,3,4,5,6,7,8,9,10,11,12,,,,
,,,,12,11,10,9,8,7,6,5,4,3,2,1,G,123,122,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,G,1,2,3,4,5,6,7,8,9,10,11,12,,,,
,,,,12,11,10,9,8,7,6,5,4,3,2,1,F,,,,,,,,,,,,,,,,,,,,,,,,F,1,2,3,4,5,6,7,8,9,10,11,12,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,12,11,10,9,8,E,,,,,,,,,,,,,,Y,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,Y,,,,,,,,,,,,,,E,8,9,10,11,12,
,12,11,10,9,8,D,,X,11,10,9,8,7,6,5,4,3,2,1,X,,114,113,112,111,110,109,108,107,106,105,104,103,102,101,X,1,2,3,4,5,6,7,8,9,10,11,X,,D,8,9,10,11,12,
,12,11,10,9,8,C,,W,11,10,9,8,7,6,5,4,3,2,1,W,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,W,1,2,3,4,5,6,7,8,9,10,11,W,,C,8,9,10,11,12,
,12,11,10,9,8,B,,V,11,10,9,8,7,6,5,4,3,2,1,V,,114,113,112,111,110,109,108,107,106,105,104,103,102,101,V,1,2,3,4,5,6,7,8,9,10,11,V,,B,8,9,10,11,12,
,12,11,10,9,8,A,,U,11,10,9,8,7,6,5,4,3,2,1,U,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,U,1,2,3,4,5,6,7,8,9,10,11,U,,A,8,9,10,11,12,
,,,,,,,,T,,10,9,8,7,6,5,4,3,2,1,T,,,112,111,110,109,108,107,106,105,104,103,102,101,,T,1,2,3,4,5,6,7,8,9,10,,T,,,,,,,,
,,,,,,,,S,,10,9,8,7,6,5,4,3,2,1,S,,,,111,110,109,108,107,106,105,104,103,102,101,,S,1,2,3,4,5,6,7,8,9,10,,S,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,R,,10,9,8,7,6,5,4,3,2,1,R,,114,113,112,111,110,109,108,107,106,105,104,103,102,101,R,1,2,3,4,5,6,7,8,9,10,,R,,,,,,,,
,,,,,O BOX R A,8,,Q,11,10,9,8,7,6,5,4,3,2,1,Q,112,111,110,,109,108,107,,106,105,104,,103,102,101,Q,1,2,3,4,5,6,7,8,9,10,11,Q,,8,O BOX L A,,,,,
,,,,,,7,,P,11,10,9,8,7,6,5,4,3,2,1,P,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,P,1,2,3,4,5,6,7,8,9,10,11,P,,7,,,,,,
,,,,,,6,,N,11,10,9,8,7,6,5,4,3,2,1,N,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,N,1,2,3,4,5,6,7,8,9,10,11,N,,6,,,,,,
,,,,,,5,,M,11,10,9,8,7,6,5,4,3,2,1,M,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,M,1,2,3,4,5,6,7,8,9,10,11,M,,5,,,,,,
,,,,,,4,,L,11,10,9,8,7,6,5,4,3,2,1,L,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,L,1,2,3,4,5,6,7,8,9,10,11,L,,4,,,,,,
,,,,,,3,,K,11,10,9,8,7,6,5,4,3,2,1,K,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,K,1,2,3,4,5,6,7,8,9,10,11,K,,3,,,,,,
,,,,,,2,,J,11,10,9,8,7,6,5,4,3,2,1,J,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,J,1,2,3,4,5,6,7,8,9,10,11,J,,2,,,,,,
,,,,,,1,,H,,,9,8,7,6,5,4,3,2,1,H,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,H,1,2,3,4,5,6,7,8,9,,,H,,1,,,,,,
,,,,,,,,G,,,,8,7,6,5,4,3,2,1,G,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,G,1,2,3,4,5,6,7,8,,,,G,,,,,,,,
,,,,,,,,,,,,,,,,,,,,F,115,114,113,112,111,110,109,108,107,106,105,104,103,102,101,F,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,E,8,7,6,5,4,3,2,1,E,,114,113,112,111,110,109,108,107,106,105,104,103,102,101,E,1,2,3,4,5,6,7,8,E,,,,,,,,,,,
,,,,,,,,,,,D,,7,6,5,4,3,2,1,D,,114,113,112,111,110,109,108,107,106,105,104,103,102,101,D,1,2,3,4,5,6,7,,D,,,,,,,,,,,
,,,,,,,,,,,C,,,6,5,4,3,2,1,C,,,112,111,110,109,108,107,106,105,104,103,102,101,,C,1,2,3,4,5,6,,,C,,,,,,,,,,,
,,,,,,,,,,,B,,,6,5,4,3,2,1,B,,,112,111,110,109,108,107,106,105,104,103,102,101,,B,1,2,3,4,5,6,,,B,,,,,,,,,,,
,,,,,,,,,,,A,,,,5,4,3,2,1,A,,,112,111,110,109,108,107,106,105,104,103,102,101,,A,1,2,3,4,5,,,,A,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, ,,,,,,,,,,`
)});
  main.variable(observer("seatArray")).define("seatArray", ["seats"], function(seats){return(
seats.trim().split("\n").map(row => row.split(',').map(s => {
  const num = parseInt(s, 10);
  return isNaN(num) ? null : num;
}))
)});
  main.variable(observer()).define(["seatArray"], function(seatArray){return(
seatArray.reduce((sum, row) => sum + row.reduce((rsum, seat) => seat === null ? rsum : rsum + 1, 0), 0)
)});
  main.variable(observer("sections")).define("sections", function(){return(
[
  {x1: 3, x2: 3, y1: 3, y2: 6, name: "Upper Tier Box Right_F"},
  {x1: 3, x2: 3, y1: 8, y2: 12, name: "Upper Tier Box Right_E"},
  {x1: 3, x2: 3, y1: 14, y2: 20, name: "Upper Tier Box Right_D"},
  {x1: 53, x2: 53, y1: 3, y2: 6, name: "Upper Tier Box Left_C"},
  {x1: 53, x2: 53, y1: 8, y2: 12, name: "Upper Tier Box Left_B"},
  {x1: 53, x2: 53, y1: 14, y2: 20, name: "Upper Tier Box Left_A"},
  {x1: 7, x2: 28, y1: 3, y2: 10, name: "Upper Tier Right"},
  {x1: 29, x2: 29, y1: 9, y2: 9, name: "Upper Tier Right"},
  {x1: 29, x2: 29, y1: 3, y2: 8, name: "Upper Tier Left"},
  {x1: 30, x2: 49, y1: 3, y2: 10, name: "Upper Tier Left"},

  {x1: 3, x2: 3, y1: 25, y2: 30, name: "Grand Tier Box Right_F"},
  {x1: 3, x2: 3, y1: 32, y2: 35, name: "Grand Tier Box Right_E"},
  {x1: 3, x2: 3, y1: 37, y2: 42, name: "Grand Tier Box Right_D"},
  {x1: 53, x2: 53, y1: 25, y2: 30, name: "Grand Tier Box Left_C"},
  {x1: 53, x2: 53, y1: 32, y2: 35, name: "Grand Tier Box Left_B"},
  {x1: 53, x2: 53, y1: 37, y2: 42, name: "Grand Tier Box Left_A"},
  {x1: 5, x2: 14, y1: 25, y2: 28, name: "Grand Tier Right Front"},
  {x1: 5, x2: 14, y1: 21, y2: 24, name: "Grand Tier Right Back"},
  {x1: 16, x2: 26, y1: 24, y2: 27, name: "Grand Tier Center Right Front"},
  {x1: 16, x2: 26, y1: 21, y2: 23, name: "Grand Tier Center Right Back"},
  {x1: 27, x2: 38, y1: 24, y2: 27, name: "Grand Tier Center Left Front"},
  {x1: 27, x2: 38, y1: 21, y2: 23, name: "Grand Tier Center Left Back"},
  {x1: 40, x2: 49, y1: 25, y2: 28, name: "Grand Tier Left Front"},
  {x1: 40, x2: 49, y1: 21, y2: 24, name: "Grand Tier Left Back"},

  {x1: 4, x2: 15, y1: 39, y2: 46, name: "Orchestra Terrace Right"},
  {x1: 1, x2: 5, y1: 48, y2: 52, name: "Orchestra Terrace Right"},
  {x1: 41, x2: 52, y1: 39, y2: 46, name: "Orchestra Terrace Left"},
  {x1: 51, x2: 55, y1: 48, y2: 52, name: "Orchestra Terrace Left"},
  {x1: 17, x2: 27, y1: 38, y2: 45, name: "Orchestra Terrace Center Right"},
  {x1: 28, x2: 39, y1: 39, y2: 45, name: "Orchestra Terrace Center Left"},
  
  {x1: 6, x2: 6, y1: 58, y2: 65, name: "Orchestra Box A Right_A"}, 
  {x1: 50, x2: 50, y1: 58, y2: 65, name: "Orchestra Box A Left_A"},
  {x1: 9, x2: 19, y1: 49, y2: 72, name: "Orchestra Right"},
  {x1: 37, x2: 47, y1: 49, y2: 72, name: "Orchestra Left"}, 
  {x1: 21, x2: 28, y1: 48, y2: 72, name: "Orchestra Center Right"},
  {x1: 29, x2: 35, y1: 48, y2: 72, name: "Orchestra Center Left"}
]
)});
  main.variable(observer("rowLettering")).define("rowLettering", function(){return(
{
  "Upper Tier Right": {3: "H", 4: "G", 5: "F", 6: "E", 7: "D", 8: "C", 9: "B", 10: "A"},
  "Upper Tier Left": {3: "H", 4: "G", 5: "F", 6: "E", 7: "D", 8: "C", 9: "B", 10: "A"},
  "Grand Tier Right Front": {25: "D", 26: "C", 27: "B", 28: "A"},
  "Grand Tier Right Back": {21: "H", 22: "G", 23: "F", 24: "E"}, 
  "Grand Tier Center Right Front": {24: "E", 25: "D", 26: "C", 27: "B"},
  "Grand Tier Center Right Back": {21: "H", 22: "G", 23: "F"},
  "Grand Tier Center Left Front": {24: "E", 25: "D", 26: "C", 27: "B"},
  "Grand Tier Center Left Back": {21: "H", 22: "G", 23: "F"},
  "Grand Tier Left Front": {25: "D", 26: "C", 27: "B", 28: "A"},
  "Grand Tier Left Back": {21: "H", 22: "G", 23: "F", 24: "E"}, 
  "Orchestra Terrace Right": {39: "N", 40: "M", 41: "L", 42: "K", 43: "J", 44: "H", 45: "G", 46: "F", 48: "E", 49: "D", 50: "C", 51: "B", 52: "A"},
  "Orchestra Terrace Left": {39: "N", 40: "M", 41: "L", 42: "K", 43: "J", 44: "H", 45: "G", 46: "F", 48: "E", 49: "D", 50: "C", 51: "B", 52: "A"},
  "Orchestra Terrace Center Right": {38: "P", 39: "N", 40: "M", 41: "L", 42: "K", 43: "J", 44: "H", 45: "G"},
  "Orchestra Terrace Center Left": {39: "N", 40: "M", 41: "L", 42: "K", 43: "J", 44: "H", 45: "G"},
  "Orchestra Right": {49: "X", 50: "W", 51: "V", 52: "U", 53: "T", 54: "S", 57: "R", 58: "Q", 59: "P", 60: "N", 61: "M", 62: "L", 63: "K", 64: "J", 65: "H", 66: "G", 68: "E", 69: "D", 70: "C", 71: "B", 72: "A"},
  "Orchestra Left": {49: "X", 50: "W", 51: "V", 52: "U", 53: "T", 54: "S", 57: "R", 58: "Q", 59: "P", 60: "N", 61: "M", 62: "L", 63: "K", 64: "J", 65: "H", 66: "G", 68: "E", 69: "D", 70: "C", 71: "B", 72: "A"},
  "Orchestra Center Right": {48: "Y", 49: "X", 50: "W", 51: "V", 52: "U", 53: "T", 54: "S", 57: "R", 58: "Q", 59: "P", 60: "N", 61: "M", 62: "L", 63: "K", 64: "J", 65: "H", 66: "G", 67: "F", 68: "E", 69: "D", 70: "C", 71: "B", 72: "A"},
  "Orchestra Center Left": {48: "Y", 49: "X", 50: "W", 51: "V", 52: "U", 53: "T", 54: "S", 57: "R", 58: "Q", 59: "P", 60: "N", 61: "M", 62: "L", 63: "K", 64: "J", 65: "H", 66: "G", 67: "F", 68: "E", 69: "D", 70: "C", 71: "B", 72: "A"}
}
)});
  main.variable(observer("outputArray")).define("outputArray", ["seatArray","makeId"], function(seatArray,makeId)
{
  const output = [];
  
  for (let y = 0;  y < seatArray.length; y++) {
    for (let x = 0; x< seatArray[y].length; x++) {
      const seat = seatArray[y][x];
      if (seat !== null) {
        output.push({x, y, seat_id: makeId(x, y, seat)}) 
      }
    }
  }
  
  // The Y dimension is reversed from how we'll display it in a chart
  return output.reverse();
}
);
  main.variable(observer()).define(["vegalite","outputArray"], function(vegalite,outputArray){return(
vegalite({
  "height": 600,
  "width": 600,
  "view": {stroke: 'transparent'},
  "data": {
    "values": outputArray.map(seat => ({...seat, hasSection: !seat.seat_id.match(/^Unknown/)}))
  },
  "mark": {
  	"type": "square",
  	"opacity": 1,
    fill: 'steelblue',
    stroke: 'black',
    strokeWidth: 0.5,
    size: 80
  },
  "encoding": {
    "x": {"field": "x", "type": "quantitative", axis: {grid: null}},
    "y": {"field": "y", "type": "quantitative", axis: {grid: null}},
    "color": {"field": "hasSection", "type": "nominal"},
    "tooltip": {},
  }
})
)});
  main.variable(observer()).define(["md"], function(md){return(
md`## CSV Output

Create the output CSV. You'll want to copy/paste this into a new file.`
)});
  main.variable(observer()).define(["dsv","outputArray"], function(dsv,outputArray){return(
dsv.csvFormat(outputArray)
)});
  main.variable(observer()).define(["md"], function(md){return(
md`## Helper Functions`
)});
  main.variable(observer("getSection")).define("getSection", ["sections"], function(sections){return(
function getSection(x, y) {
  // This is a horribly inefficient way of doing this
  const section = sections.find(
    ({x1, x2, y1, y2}) => x >= x1 && x <= x2 && y >= y1 && y <= y2
  );
  return section ? section.name : "Unknown";
}
)});
  main.variable(observer("makeId")).define("makeId", ["getSection","rowLettering"], function(getSection,rowLettering){return(
function makeId(x, y, seat) {
  const section = getSection(x, y);
  const rowLetter = rowLettering[section] && rowLettering[section][y];
  return [section, rowLetter, seat].filter(Boolean).join('_');
}
)});
  main.variable(observer()).define(["md"], function(md){return(
md`## Libraries`
)});
  main.variable(observer("dsv")).define("dsv", ["require"], function(require){return(
require('d3-dsv')
)});
  main.variable(observer("vegalite")).define("vegalite", ["require"], function(require){return(
require("@observablehq/vega-lite@0.2")
)});
  return main;
}
